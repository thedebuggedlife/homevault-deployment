name: Build and Release Resources

on:
  push:
    tags:
      - 'v*' # This will trigger the workflow when you push tags that start with 'v'
  workflow_dispatch: # Allows manual trigger

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate ZIP files
        run: |
          # Create output directories
          mkdir -p output_zips/appdata  # Structure for deployment

          # Create appdata ZIP files
          if [ -d "./appdata" ]; then
            # Find all immediate subdirectories of the root appdata folder
            find ./appdata -mindepth 1 -maxdepth 1 -type d | while read dir; do
              folder_name=$(basename "$dir")  # Get the name of the subdirectory
              zip_name="${folder_name}.zip"   # Format: {folder}.zip
              
              echo "Creating ZIP: $zip_name for content in $dir"
              (cd "$dir" && zip -r "../../output_zips/appdata/$zip_name" .)  # Put in appdata subfolder
            done
          else
            echo "Root appdata directory not found"
          fi
          
          # Create setup.zip from the /setup folder at the root
          if [ -d "./setup" ]; then
            echo "Creating setup.zip from /setup folder"
            (cd "./setup" && zip -r "../output_zips/setup.zip" .)  # Put at root level
          else
            echo "Setup directory not found"
          fi

      - name: Upload ZIP files
        uses: actions/upload-artifact@v4
        with:
          name: output_zips
          path: output_zips

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download ZIP files
        uses: actions/download-artifact@v4
        with:
          name: output_zips
          path: release_files

      - name: Extract tag name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.TAG_NAME }}
          name: Release ${{ steps.get_tag.outputs.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            release_files/appdata/*.zip
            release_files/setup.zip